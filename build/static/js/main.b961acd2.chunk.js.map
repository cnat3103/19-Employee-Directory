{"version":3,"sources":["components/Navbar.js","components/EmployeesTable.js","utils/Employees.js","App.js","index.js"],"names":["Navbars","props","Navbar","className","Brand","href","Form","inline","FormControl","name","type","placeholder","value","search","onChange","onSearch","id","EmployeesTable","employees","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","useSortableData","getClassNamesFor","undefined","Table","striped","bordered","hover","Button","onClick","map","employee","title","firstName","lastName","email","team","role","Employees","App","searchTerm","setSearchTerm","searchedEmployees","filter","result","searchBylastName","toLowerCase","includes","searchByfirstName","searchByTitle","searchByTeam","searchByRole","searchByEmail","event","target","ReactDOM","render","document","getElementById"],"mappings":"oPAqBeA,EAlBC,SAAAC,GACZ,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,mDACd,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAI,kDACvB,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACR,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,OACLC,YAAY,SACZR,UAAU,WACVS,MAAOX,EAAMY,OACbC,SAAUb,EAAMc,SAChBC,GAAG,Y,wBCmFRC,EA5DQ,SAAChB,GAAW,IAAD,EAnCV,SAACiB,GAA8B,IAAnBC,EAAkB,uDAAT,KAAS,EAChBC,IAAMC,SAASF,GADC,mBAC7CG,EAD6C,KACjCC,EADiC,KAG9CC,EAAcJ,IAAMK,SAAQ,WAChC,IAAIC,EAAa,YAAOR,GAYxB,OAXmB,OAAfI,GACFI,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACH,cAAzBR,EAAWS,WAA6B,EAAI,EAEjDH,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACH,cAAzBR,EAAWS,UAA4B,GAAK,EAE9C,KAGJL,IACN,CAACR,EAAWI,IAETU,EAAc,SAACF,GACnB,IAAIC,EAAY,YAEdT,GACAA,EAAWQ,MAAQA,GACM,cAAzBR,EAAWS,YAEXA,EAAY,cAEdR,EAAc,CAAEO,MAAKC,eAGvB,MAAO,CAAEb,UAAWM,EAAaQ,cAAaV,cAKCW,CAAgBhC,EAAMiB,WAA7DA,EADwB,EACxBA,UAAWc,EADa,EACbA,YAAaV,EADA,EACAA,WAC1BY,EAAmB,SAACzB,GACxB,GAAKa,EAGL,OAAOA,EAAWQ,MAAQrB,EAAOa,EAAWS,eAAYI,GAG1D,OACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,4BAAI,kBAACC,EAAA,EAAD,CACJC,QAAS,kBAAMT,EAAY,OAC3B7B,UAAW+B,EAAiB,OAFxB,OAIJ,qCACA,4BAAI,kBAACM,EAAA,EAAD,CACJC,QAAS,kBAAMT,EAAY,cAC3B7B,UAAW+B,EAAiB,cAFxB,eAIJ,4BAAI,kBAACM,EAAA,EAAD,CACJC,QAAS,kBAAMT,EAAY,aAC3B7B,UAAW+B,EAAiB,aAFxB,cAIJ,4BAAI,kBAACM,EAAA,EAAD,CACJC,QAAS,kBAAMT,EAAY,UAC3B7B,UAAW+B,EAAiB,UAFxB,UAIJ,4BAAI,kBAACM,EAAA,EAAD,CACJC,QAAS,kBAAMT,EAAY,SAC3B7B,UAAW+B,EAAiB,SAFxB,SAIJ,4BAAI,kBAACM,EAAA,EAAD,CACJC,QAAS,kBAAMT,EAAY,SAC3B7B,UAAW+B,EAAiB,SAFxB,WAMR,+BACGhB,EAAUwB,KAAI,SAAAC,GACb,OACE,wBAAIb,IAAKa,EAAS3B,IAChB,4BAAK2B,EAAS3B,IACd,4BAAK2B,EAASC,OACd,4BAAKD,EAASE,WACd,4BAAKF,EAASG,UACd,4BAAKH,EAASI,OACd,4BAAKJ,EAASK,MACd,4BAAKL,EAASM,aCMXC,EA7FC,CACd,CACElC,GAAI,EACJ6B,UAAW,SACXC,SAAU,aACVF,MAAO,KACPI,KAAM,YACNC,KAAM,OACNF,MAAO,qBAET,CACE/B,GAAI,EACJ6B,UAAW,SACXC,SAAU,QACVF,MAAO,KACPI,KAAM,aACNC,KAAM,cACNF,MAAO,uBAET,CACE/B,GAAI,EACJ6B,UAAW,WACXC,SAAU,SACVF,MAAO,KACPI,KAAM,QACNC,KAAM,kBACNF,MAAO,yBAET,CACE/B,GAAI,EACJ6B,UAAW,QACXC,SAAU,WACVF,MAAO,KACPI,KAAM,YACNC,KAAM,cACNF,MAAO,oBAET,CACE/B,GAAI,EACJ6B,UAAW,OACXC,SAAU,QACVF,MAAO,KACPI,KAAM,QACNC,KAAM,cACNF,MAAO,kBAET,CACE/B,GAAI,EACJ6B,UAAW,QACXC,SAAU,QACVF,MAAO,KACPI,KAAM,aACNC,KAAM,mBACNF,MAAO,uBAET,CACE/B,GAAI,EACJ6B,UAAW,OACXC,SAAU,QACVF,MAAO,OACPI,KAAM,QACNC,KAAM,YACNF,MAAO,qBAET,CACE/B,GAAI,EACJ6B,UAAW,MACXC,SAAU,WACVF,MAAO,KACPI,KAAM,YACNC,KAAM,YACNF,MAAO,qBAET,CACE/B,GAAI,EACJ6B,UAAW,SACXC,SAAU,cACVF,MAAO,KACPI,KAAM,aACNC,KAAM,0BACNF,MAAO,sBAET,CACE/B,GAAI,GACJ6B,UAAW,QACXC,SAAU,WACVF,MAAO,KACPI,KAAM,aACNC,KAAM,mBACNF,MAAO,uBCxDEI,EA7BH,WAAM,MAEI/B,IAAMC,SAAS6B,GAA5BhC,EAFS,sBAGoBE,IAAMC,SAAS,IAHnC,mBAGT+B,EAHS,KAGGC,EAHH,KAWVC,EAAoBpC,EAAUqC,QAAO,SAAAC,GACzC,IAAMC,EAAmBD,EAAOV,SAASY,cAAcC,SAASP,EAAWM,eACrEE,EAAoBJ,EAAOX,UAAUa,cAAcC,SAASP,EAAWM,eACvEG,EAAgBL,EAAOZ,MAAMc,cAAcC,SAASP,EAAWM,eAC/DI,EAAeN,EAAOR,KAAKU,cAAcC,SAASP,EAAWM,eAC7DK,EAAeP,EAAOP,KAAKS,cAAcC,SAASP,EAAWM,eAC7DM,EAAgBR,EAAOT,MAAMW,cAAcC,SAASP,EAAWM,eACrE,OAAOD,GAAoBG,GAAqBC,GAAiBC,GAAgBC,GAAgBC,KAGnG,OACE,6BACE,kBAAC,EAAD,CAAQjD,SAjBS,SAAAkD,GACnBZ,EAAcY,EAAMC,OAAOtD,QAgBOC,OAAQuC,IACxC,kBAAC,EAAD,CAAgBlC,UAAWoC,M,MCxBjCa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b961acd2.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Form, FormControl } from 'react-bootstrap';\n\nconst Navbars = props => {\n    return (\n        <Navbar className=\"bg-primary variant-dark justify-content-between\">\n            <Navbar.Brand href=\"#\"><b>Employee Directory</b></Navbar.Brand>\n            <Form inline>\n                <FormControl\n                    name=\"term\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    className=\" mr-sm-2\"\n                    value={props.search}\n                    onChange={props.onSearch}\n                    id=\"term\"\n                />\n            </Form>\n        </Navbar>\n    )\n}\nexport default Navbars;","import React from \"react\";\nimport { Table, Button } from 'react-bootstrap';\n\nconst useSortableData = (employees, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...employees];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [employees, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { employees: sortedItems, requestSort, sortConfig };\n};\n\n// EmployeesTable returns the table\nconst EmployeesTable = (props) => {\n  const { employees, requestSort, sortConfig } = useSortableData(props.employees);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th><Button \n          onClick={() => requestSort('id')}\n          className={getClassNamesFor('id')}\n          >ID</Button></th>\n          <th>Title</th>\n          <th><Button \n          onClick={() => requestSort('firstName')}\n          className={getClassNamesFor('firstName')}\n          >First Name</Button></th>\n          <th><Button \n          onClick={() => requestSort('lastName')}\n          className={getClassNamesFor('lastName')}\n          >Last Name</Button></th>\n          <th><Button \n          onClick={() => requestSort('email')}\n          className={getClassNamesFor('email')}\n          >Email</Button></th>\n          <th><Button \n          onClick={() => requestSort('team')}\n          className={getClassNamesFor('team')}\n          >Team</Button></th>\n          <th><Button \n          onClick={() => requestSort('role')}\n          className={getClassNamesFor('role')}\n          >Role</Button></th>\n        </tr>\n      </thead>\n      <tbody>\n        {employees.map(employee => {\n          return (\n            <tr key={employee.id}>\n              <td>{employee.id}</td>\n              <td>{employee.title}</td>\n              <td>{employee.firstName}</td>\n              <td>{employee.lastName}</td>\n              <td>{employee.email}</td>\n              <td>{employee.team}</td>\n              <td>{employee.role}</td>\n\n            </tr>\n          )\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default EmployeesTable;","// employees data\nconst Employees = [\n    {\n      id: 1,\n      firstName: 'Marcus',\n      lastName: 'Telemachus',\n      title: 'Mr',\n      team: 'Marketing',\n      role: 'Lead',\n      email: 'mtel123@gmail.com',\n    },\n    {\n      id: 2,\n      firstName: 'Maggie',\n      lastName: 'Smith',\n      title: 'Ms',\n      team: 'Technology',\n      role: 'Team member',\n      email: 'msmith123@gmail.com',\n    },\n    {\n      id: 3,\n      firstName: 'Angelica',\n      lastName: 'Ruggle',\n      title: 'Ms',\n      team: 'Legal',\n      role: 'Department head',\n      email: 'angieruggle@gmail.com',\n    },\n    {\n      id: 4,\n      firstName: 'Arman',\n      lastName: 'Ruggieri',\n      title: 'Mr',\n      team: 'Marketing',\n      role: 'team member',\n      email: 'armani@gmail.com',\n    },\n    {\n      id: 5,\n      firstName: 'Tony',\n      lastName: 'Burke',\n      title: 'Mr',\n      team: 'Legal',\n      role: 'team member',\n      email: 'tbuk@gmail.com',\n    },\n    {\n      id: 6,\n      firstName: 'Avici',\n      lastName: 'Prime',\n      title: 'Mr',\n      team: 'Technology',\n      role: 'Senior developer',\n      email: 'primovici@gmail.com',\n    },\n    {\n      id: 7,\n      firstName: 'Tina',\n      lastName: 'Fonda',\n      title: 'Miss',\n      team: 'Legal',\n      role: 'Assistant',\n      email: 'tfondue@gmail.com',\n    },\n    {\n      id: 8,\n      firstName: 'Ron',\n      lastName: 'McDonald',\n      title: 'Mr',\n      team: 'Marketing',\n      role: 'Assistant',\n      email: 'bigmick@gmail.com',\n    },\n    {\n      id: 9,\n      firstName: 'Angelo',\n      lastName: 'Andronichus',\n      title: 'Mr',\n      team: 'Technology',\n      role: 'Chief Technical Officer',\n      email: 'andro123@gmail.com',\n    },\n    {\n      id: 10,\n      firstName: 'Mason',\n      lastName: 'Williams',\n      title: 'Mr',\n      team: 'Technology',\n      role: 'Junior Developer',\n      email: 'mwill123@gmail.com',\n    }\n  ];\n\n  export default Employees;","import React from 'react';\nimport Navbar from './components/Navbar';\nimport EmployeesTable from './components/EmployeesTable';\nimport Employees from './utils/Employees';\n\nconst App = () => {\n  // created employees state for storing Employees array\n  const [employees] = React.useState(Employees);\n  const [searchTerm, setSearchTerm] = React.useState('');\n\n  // receive callback from Navbar and setSearchTerm\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  }\n\n  // search employee and return search results\n  const searchedEmployees = employees.filter(result => {\n    const searchBylastName = result.lastName.toLowerCase().includes(searchTerm.toLowerCase());\n    const searchByfirstName = result.firstName.toLowerCase().includes(searchTerm.toLowerCase());\n    const searchByTitle = result.title.toLowerCase().includes(searchTerm.toLowerCase());\n    const searchByTeam = result.team.toLowerCase().includes(searchTerm.toLowerCase());\n    const searchByRole = result.role.toLowerCase().includes(searchTerm.toLowerCase());\n    const searchByEmail = result.email.toLowerCase().includes(searchTerm.toLowerCase());\n    return searchBylastName || searchByfirstName || searchByTitle || searchByTeam || searchByRole || searchByEmail;\n  })\n\n  return (\n    <div>\n      <Navbar onSearch={handleSearch} search={searchTerm} />\n      <EmployeesTable employees={searchedEmployees} />\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}